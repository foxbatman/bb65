def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in (arg2 + arg2 | arg2 for i in [(arg2 | arg1) - arg2 for i in range(30)]):
        var5.func3(var6, arg2)
    var7 = func6()
    def func7(arg8, arg9):
        var10 = 829 & 84 - arg8
        var11 = (arg2 | -286) + arg9 + var7
        var12 = arg8 - var7
        var13 = (var7 | (111 + var11)) & arg9
        var14 = var12 & var13
        var15 = var11 - (arg1 - -679) - var10
        var16 = (-262 + 328 - var11) & arg1
        if var12 < var12:
            var17 = (var14 + var12 ^ var14) & var14
        else:
            var17 = (var16 - (var13 & var10)) - arg2
        var18 = (var10 | var13) + var12 & arg1
        var19 = arg8 | ((1124562967 | var18) & var15)
        var20 = ((arg8 & var7) & var19) - arg9
        var21 = -461 | arg1 - var14 | var15
        var22 = (var10 & var7 & -1184385086) & arg1
        var23 = arg8 ^ var7 - var12 - var20
        var24 = arg2 | var11 ^ -370237938 ^ var16
        result = (arg1 | var14) & (var22 ^ var15)
        return result
    var25 = func7(var7, arg1)
    var26 = ((arg2 & 1137135389) + var25) - var7
    var27 = arg1 ^ (arg1 | -421) & var26
    var28 = arg2 | (var7 ^ arg2)
    var29 = (arg2 ^ var25) ^ -169 - var28
    var30 = arg1 ^ var27 - (var26 ^ var27)
    var31 = (var25 ^ 584) | var7 + arg1
    var32 = var27 | var29 ^ var30 & var28
    var33 = var7 ^ -590
    if var33 < var28:
        var34 = (var28 ^ var29) & arg2 ^ var30
    else:
        var34 = var7 | var29
    if var31 < var33:
        var35 = 240 & var31
    else:
        var35 = var25 & var27
    var36 = (var26 | arg1 & var30) ^ var26
    var37 = (var33 & (var7 ^ var27)) ^ var36
    var38 = (var27 + var25) + var27 ^ var30
    var39 = var27 ^ var26 & (var7 | var36)
    result = var7 & (var7 - arg1 - var38) ^ var36
    return result
def func6():
    func4()
    result = len(xrange(25))
    func5()
    return result
def func5():
    global len
    del len
def func4():
    global len
    len = lambda x : -9
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 8'
    print 'arg_number: 40'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
